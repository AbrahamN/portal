<%
# Copyright (c) 2012-2013 Cardiff University, UK.
# Copyright (c) 2012-2013 The University of Manchester, UK.
#
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice,
#   this list of conditions and the following disclaimer.
#
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
#
# * Neither the names of The University of Manchester nor Cardiff University nor
#   the names of its contributors may be used to endorse or promote products
#   derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# Authors
#     Abraham Nieva de la Hidalga
#     Robert Haines
#
# Synopsis
#
# BioVeL Taverna Lite  is a prototype interface to Taverna Server which is
# provided to support easy inspection and execution of workflows.
#
# For more details see http://www.biovel.eu
#
# BioVeL is funded by the European Commission 7th Framework Programme (FP7),
# through the grant agreement number 283359.
%>

<% content_for :title, "BioVeL Portal - Run " +
                 @run.description %>
<% if @run.state == "finished" -%>
  <%= render :partial => 'run_finished', :locals => {:run => @run} %>
<% else %>
  <%= render :partial => 'run_active', :locals => {:run => @run} %>
<% end -%>
<%= javascript_tag do -%>
var run_probe=""
var interaction_probe=""
var interaction_identifier=""
var run_state="<%= @run.state.to_s %>"
  $("#tabs_results" ).tabs();

  $(document).ready(
    function(){
      if(run_state=="running"){
        monitor_run();
      }
    });
function monitor_run(){
    if(run_probe==""){
      if(interaction_probe!=""){
        window.clearInterval(interaction_probe)
        interaction_probe=""
      }
      run_probe=window.setInterval("monitoring_run()",5000)
    }else{
        monitor_interaction()
    }
  }

  function monitoring_run(){
    $.ajax({
      url: "<%= 'refresh/'+@run.id.to_s %>",
      type: "GET",
      dataType: "script"
    });
  }
  function monitor_interaction(){
    if(run_probe!=""){
      window.clearInterval(run_probe)
      run_probe=""
      interaction_probe=window.setInterval("monitoring_interaction()",5000)
    }
  }
  function monitoring_interaction(){
    var x = interaction_identifier
    var i_uri = "<%= 'interaction/'+@run.id.to_s %>"+'/'
    if (interaction_identifier != "")
      i_uri = i_uri + x
    $.ajax({
      url: i_uri,
      type: "GET",
      dataType: "script"
    });
  }
<% end -%>
