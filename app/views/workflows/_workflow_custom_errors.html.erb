<%
# Copyright (c) 2012-2013 Cardiff University, UK.
# Copyright (c) 2012-2013 The University of Manchester, UK.
#
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# 
# * Redistributions of source code must retain the above copyright notice,
#   this list of conditions and the following disclaimer.
# 
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
# 
# * Neither the names of The University of Manchester nor Cardiff University nor
#   the names of its contributors may be used to endorse or promote products
#   derived from this software without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
# 
# Authors
#     Abraham Nieva de la Hidalga
#      
# Synopsis 
# 
# BioVeL Taverna Lite  is a prototype interface to Taverna Server which is 
# provided to support easy inspection and execution of workflows.
# 
# For more details see http://www.biovel.eu
# 
# BioVeL is funded by the European Commission 7th Framework Programme (FP7),
# through the grant agreement number 283359.
%>

<div id="wf_custom_errors" class="workflow_part" style="min-height:300px;
     			    height:auto !important;
                            height:300px;">

<% if @workflow_errors.count>0 %>
<%= form_for :file_uploads, 
      :url => {:controller => 'workflows', :action => 'save_custom_errors'}, 
      :html => {:multipart => true}, :disable_with => "Saving..." do |f| -%>
  <%= hidden_field_tag "workflow_id", @workflow.id %>
  <%= hidden_field_tag "selected_tab", 'customise' %>
  <%= hidden_field_tag "selected_choice", 'errors' %> 
    <h3>
      This workflow has been executed <%= @workflow.run_count %> 
      <%= "Time".pluralize(@workflow.run_count)%>        
    </h3>
      <p>
        <b>
          <%= @workflow.get_runs_with_errors_count %> 
          <%= "run".pluralize(@workflow.get_runs_with_errors_count)%>
          have finished with an error on one or more outputs  
        </b>
      </p>
      <p>
        <b>
          To customise an error message:
        </b>
      <ol>
        <li>
          Select the an error pattern  
        </li>   
        <li>
          Provide a custom message to explain what has happened  
        </li>
        <li>  
          Select the title for the the error message
        </li>
        <li>  
          Repeat 1 - 3 for every error you want to customise
        </li>
        <li>  
          Click "Save" to save customised error messages
        </li>
      </ol> 
      <b>  
        The custom values and/or files will be used when the workflow is shown 
        and run
      </b>
   </p>   
   <%= render :partial => '/results/results_list', :locals => {:results => @workflow_errors} %>
     
   <% @custom_inputs.each do |item| %>
     <% portname = item.name %>
     <!-- Use sources to get the original sample and descriptio values -->
     <% example_value = @sources[portname].blank? ? "": @sources[portname] -%>  
     <h2> <%= label_tag portname %></h2>
     <dl class='list_any'>
       <dt class='list_title'>Description:</dt>
       <dd class='list_description'>
         <%=@source_descriptions[portname].blank? ? "Not Provided" : simple_format(@source_descriptions[portname]) -%>
       </dd>
       <dt class='list_title'>Example Value:</dt>
       <dd class='list_description'>
         <%= render :partial => 'partials/preview_and_detail', 
           :locals => {:content_label => "cit_"+ portname, :content => example_value } %>
       </dd>
     </dl>
     <h3> 
       Customise <%= label_tag portname %>   
       <%= f.check_box  "customise_#{portname}", :checked => !item.id.nil? -%>
     </h3>
     <% example_value = !item.id.nil? ? item.sample_value : example_value -%>
     <!-- Use custom_inputs to load saved customisation values -->
     <dl class='list_any'>
       <dt class='list_title'>Enter Value:</dt>
       <dd class='list_description'>
         <%= f.text_area portname, :value => example_value, :rows => 1, 
           :onclick => '$(this).select();', :style =>'width:95%' %> 
       </dd>
       <dt class='list_title'>Select File:</dt>
       <dd class='list_description'>
         <%= f.file_field  "file_for_#{portname}" %>
         <%= item.sample_file.nil? ? "No sample" : "Current: " + item.sample_file -%> 
       </dd>      
       <dt class='list_title'>Input Type:</dt>
       <dd class='list_description'>
         <%= f.select "display_for_#{portname}", 
           options_for_select([["value or file (Default)", 1],
                               ["value", 2], ["file", 3]], item.display_control_id) %>
       </dd>      
       <!-- Add a preview that shows how data will be displayed according with 
            the selected input control-->
       <!-- Create a control for displaying file contents on demand -->
       <!-- If file is present add a button link to it -->
     </dl>    
   <% end %>
   <div title="Save Input Changes" alt="Save Input Changes" style="float:right; padding:10px;"> 
     <%= submit_tag 'Save' %>  
   </div>
   <div title="Revert workflow annotation" alt="Revert workflow annotation" style="float:right; padding:10px;"> 
     <%= submit_tag 'Reset' %>  
   </div>

   <div style="clear:both;"> 
   </div>
  <% end -%> <!--form-->
<% else %>  
  <p>
    <% run_count = @workflow.run_count %> 
    <% if run_count == 0 then -%>
      <b> This workflow has not been executed in BioVeL Portal </b>
    <% else -%>
      <b> 
        This workflow has been <%= run_count %> times in BioVeL Portal with 
        no errors
      </b>
    <% end%> 
  </p>
<% end %> <!--if output.count-->
</div>  
   <% @sources.each do |item| -%>  
     <% portname = item[0] -%>
          <%= javascript_tag do -%>
            $( "#dialog<%='_'+portname%>" ).dialog({
              autoOpen: false,
              show: {
                effect: "blind",
                duration: 1000
              },
              hide: {
                effect: "explode",
                duration: 1000
              }
            });
            $( "#switch<%='_'+portname%>" ).click(function() {
              $( "#dialog" ).dialog( "open" );
              });
           });
          <% end -%>  
  <%end -%>

